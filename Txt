#include <fstream>
#include <filesystem>
#include <string>
#include <mpi.h>

namespace fs = std::filesystem;

const auto INPUT_FOLDER = fs::path("C://Users/Honor/Documents/mpi_input");
const auto OUTPUT_FOLDER = fs::path("C://Users/Honor/Documents/mpi_output");

fs::path append_extension(const fs::path& path, const char* ext) {
auto sz_ext = ext;
if ('.' == *sz_ext) ++sz_ext;
return path.string() + "." + sz_ext;
}

void processFile(const fs::path& filePath) {
std::ifstream ifs{ filePath };
std::ofstream ofs{ OUTPUT_FOLDER / append_extension(filePath.filename(), "res") };

int n;
ifs » n;
int* a = new int[n];
for (int i = 0; i < n; i++)
ifs » a[i];
int b;
for (int i = 0; i < n - 1; i++) // i - номер прохода
{
for (int j = 0; j < n - 1; j++) // внутренний цикл прохода
{
if (a[j + 1] < a[j])
{
b = a[j + 1];
a[j + 1] = a[j];
a[j] = b;
}
}
}
for (int i = 0; i < n; i++)
ofs « a[i] « " ";
}

int main(int argc, char** argv)
{
int rank = 0;

MPI_Init(&argc, &argv);
MPI_Comm_rank(MPI_COMM_WORLD, &rank);

auto p = INPUT_FOLDER / (std::to_string(rank) + ".txt");
processFile(p);

MPI_Finalize();
}
